@startuml
title Classes - AlgoStars

class Jugador {
}

interface Edificio {

    {abstract}+ pasarTurno()
    + recibirDaño(daño)
}

class EdificioConcreto{
    -vida
    {abstract}+ pasarTurno()
    + recibirDaño(daño)
    + construir(Inventario, Casillero)
}

class EdificioEnConstruccion {
    -vida
    + pasarTurno()
    + recibirDaño(daño)
    - vaASer: Edificio
    - turnosRestantes
}

class EdificioProto {
    - escudo
    - estadoEnergetico
    + recibirDaño(daño)
    + pasarTurno()
    '+ estaActivo()'
    + setEstadoEnergetico(estado)
}

class EdificioZerg {
    + pasarTurno()
}

class Casillero {
    + tieneEnergia()
    + pasarTurno()
    + setTipoCasillero(tipoCelda:TipoCasillero)
    + contagiarMoho(casillero, rango)
    + sumarEnergia(casillero, rango)
    - estaOcupado
    - energia
    - coordenadaX
    - coordenadaY
}

class Mapa {
    + contagiarMoho(x, y, rango)
    + sumarEnergia(x, y, rango)
}

class Mineral {
 - cantidad
 + agregar(int: cantidad)
 + total()
 + sumar(Mineral: mineral)
}

class Gas {
 - cantidad
 + agregar(int: cantidad)
 + total()
 + sumar(Gas: gas)
}

class Moho {
    + pasarTurno()
    + tieneEnergia()
}
class CasilleroVacio{
    + pasarTurno()
    + tieneEnergia()
}
class NodoGas{
    + pasarTurno()
    + tieneEnergia()
}
class NodoMineral{
    + pasarTurno()
    + tieneEnergia()
}

class Inventario {
}

interface TipoCasillero{
{abstract}+ pasarTurno()
{abstract}+ tieneEnergia()
}



Casillero --> TipoCasillero

NodoGas <- TipoCasillero
TipoCasillero --> NodoMineral
TipoCasillero --> CasilleroVacio
TipoCasillero -> Moho

Inventario o-- Gas
Inventario o-- Mineral

Mapa "1" *- "*" Casillero
Casillero -> Mapa

Edificio "*"--o "1" Inventario
Edificio "1"-->"1" Casillero


Edificio <|... EdificioConcreto
Edificio <|... EdificioEnConstruccion
EdificioConcreto <|... EdificioZerg
EdificioConcreto <|... EdificioProto



Jugador "1" o--> "1" Inventario
@enduml